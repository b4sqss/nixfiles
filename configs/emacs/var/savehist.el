;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-char-history org-roam-node-history org-refile-history face-name-history minibuffer-history-search-history diminish-history-names diminish-history-symbols rg-pattern-history org-tags-history consult-spotify-history Info-search-history regexp-history woman-topic-history org-read-date-history magit-revision-history embark--prompter-history command-history org-link--history consult--buffer-history counsel-ibuffer-history empty-history minibuffer-history file-name-history evil-ex-history consult--grep-history consult--line-history consult--theme-history extended-command-history consult--find-history counsel-M-x-history))
(setq read-char-history '("yes"))
(setq org-roam-node-history '("dawidowna" "mudança climatica" "comer carne" "captalism" "0.9 = 1" "awodwa" "ioanioaw" "oianfaoi" "wudab oiwa" "conceitos x fatos                                                           " "Learning techniques                                                         " "newnode" "teoitnes" "Learning techniques                                                                                              "))
(setq face-name-history '("mode-line"))
(setq diminish-history-symbols '("flycheck-mode" "evil-collection-unimpaired-mode" "visual-line-mode" "undo-tree-mode" "company-box-mode" "company-mode" "which-key-mode"))
(setq org-read-date-history '("02    " "   " "11-29    " "19    " "06    " "   " "09-29 16:00    " "10-06    " "29    " "10-08 15:30    " "2021-11-21    " "9    " "q:q    " "jj    " "   "))
(setq magit-revision-history '("origin/master"))
(setq embark--prompter-history '(">                                          evil-shift-right"))
(setq command-history '((find-file "~/.emacs.d/" t) (find-file "~/.emacs.d/" t) (find-file "~/.emacs.d/emacs.org" t) (evil-delete 28631 28632 'screen-line nil nil) (evil-delete 16036 16037 'screen-line nil nil) (consult-theme 'doom-tomorrow-night) (execute-extended-command nil "consult-theme" #("consult" 0 7 (face nil))) (find-file "~/.config/xmonad/xmobar.hs" t) (evil-find-char-to nil 114) (evil-find-char-to-backward nil 82) (find-file "~/.config/rofi/config.rasi" t) (evil-delete 1895 1968 'screen-line nil nil) (evil-delete 1895 1896 'screen-line nil nil) (evil-delete 1895 1913 'screen-line nil nil) (evil-delete 1889 1912 'screen-line nil nil) (evil-delete 1882 1919 'screen-line nil nil) (evil-delete 1718 1719 'screen-line nil nil) (evil-delete 1586 1593 'screen-line nil nil) (evil-delete 1896 1966 'screen-line nil nil) (evil-delete 1966 1967 'screen-line nil nil) (evil-delete 1520 1556 'screen-line nil nil) (evil-delete 1370 1371 'screen-line nil nil) (evil-delete 1317 1331 'screen-line nil nil) (evil-delete 1317 1325 'screen-line nil nil) (evil-delete 1317 1327 'screen-line nil nil) (evil-delete 1317 1332 'screen-line nil nil) (evil-delete 1317 1348 'screen-line nil nil) (evil-delete 2379 2380 'screen-line nil nil) (evil-delete 2379 2435 'screen-line nil nil) (evil-delete 1690 1702 'screen-line nil nil) (evil-delete 1559 1594 'screen-line nil nil) (evil-delete 1317 1348 'screen-line nil nil) (evil-delete 1395 1416 'screen-line nil nil) (evil-delete 1313 1314 'screen-line nil nil) (evil-delete 1236 1243 'screen-line nil nil) (evil-delete 465 466 'screen-line nil nil) (evil-delete 465 489 'screen-line nil nil) (evil-delete 489 528 'screen-line nil nil) (find-file "/etc/nixos/configuration.nix" t) (evil-delete 561 562 'screen-line nil nil) (evil-delete 561 564 'screen-line nil nil) (evil-delete 561 574 'screen-line nil nil) (evil-delete 561 638 'screen-line nil nil) (evil-delete 561 638 'screen-line nil nil) (evil-delete 1204 1205 'screen-line nil nil) (evil-delete 1204 1236 'screen-line nil nil) (evil-delete 1059 1071 'screen-line nil nil) (evil-record-macro 58) (evil-record-macro 58) (evil-record-macro 58) (find-file "~/.config/nixpkgs/home.nix" t) (find-file "~/.zshrc" t) (evil-replace 15533 15534 'exclusive 80) (evil-replace 15627 15628 'exclusive 80) (evil-yank 15499 15591 'screen-line nil nil) (find-file "~/.config/xmonad/xmonad.hs" t) (find-file "/etc/nixos/configuration.nix" t) (evil-delete 399 400 'screen-line nil nil) (evil-delete 399 420 'screen-line nil nil) (evil-delete 60 81 'screen-line nil nil) (find-file "~/nixfiles/home.nix" t) (evil-delete 94 134 'screen-line nil nil) (find-file "~/.config/nixpkgs/alacritty.nix" t) (lsp nil) (execute-extended-command nil "lsp" #("lsp" 0 3 (face nil))) (find-file "~/Projects/git/dwm/config.h" t) (evil-delete 873 874 'screen-line nil nil) (evil-delete 802 809 'screen-line nil nil) (evil-delete 809 831 'screen-line nil nil) (evil-replace 248 249 'exclusive 49) (evil-replace 263 264 'exclusive 48) (find-file "~/.config/xmonad/xmobar.hs" t) (find-file "~/.config/xmonad/xmobar.hs" t) (dired "~/.config/xmonad/" nil) (find-file "~/.config/xmonad/xmonad.hs" t) (find-file "~/.config/xmonad/xmobar.hs" t) (evil-delete 8211 8262 'screen-line nil nil) (evil-delete 8274 8311 'screen-line nil nil) (evil-delete 7976 8010 'screen-line nil nil) (find-file "~/.config/nixpkgs/init.vim" t) (eshell nil) (execute-extended-command nil "eshell" #("eshell" 0 6 (face nil))) (find-file "/etc/nixos/configuration.nix" t) (eshell nil) (execute-extended-command nil "eshell" #("eshell" 0 6 (face nil))) (eshell nil) (execute-extended-command nil "eshell" #("eshell" 0 6 (face nil))) (evil-write nil nil nil nil nil) (execute-extended-command nil "evil-write" #("write" 0 5 (face nil))) (evil-delete 7898 7952 'screen-line nil nil) (find-file "~/.config/xmonad/xmonad.hs" t) (find-file "~/.config/nixpkgs/alacritty.nix" t) (find-file "~/.config/nixpkgs/xmonad.nix" t) (find-file "~/.config/xmonad/xmonad.hs" t) (evil-replace 1360 1361 'exclusive 115) (find-file "~/.config/xmonad/xmobar.hs" t) (find-file "~/.config/nixpkgs/alacritty.nix" t) (find-file "~/.config/nixpkgs/alacritty.nix" t) (find-file "~/Projects/git/dwm/config.h" t) (eshell nil)))
(setq consult--buffer-history '("*dashboard*􀀁" "alacritty.nix􀀁" "emacs.nix􀀁" "home.nix􀀁" "*helpful variable: mode-line-position*􀀁" "*helpful variable: mode-line-format*􀀁" "*dashboard*􀀁" "emacs.org􀀁" "*et:guess*􀀁" "20211025154657-captalism.org􀀁" "20211025163648-mudanca_climatica.org􀀁" #("emacs.org􀀁" 9 10 (consult-strip t invisible t)) "20211025161221-comer_carne.org􀀁" "20211025154657-captalism.org􀀁" "20211024130944-0_9_1.org􀀁" "README.org􀀁" "*Capture*􀀁" "*Messages*􀀁" "*dashboard*􀀁" "*Customize Group: Smart Mode Line*􀀁" "emacs.org􀀁" "*dashboard*􀀁" "job􀀁" "*dashboard*􀀁" "20210918145817-learning_techniques.org􀀁" "CAPTURE-20210919091932-einstellung.org􀀁" "20210918145817-learning_techniques.org􀀁" "*scratch*􀀁" "orgmode-guide.org􀀁" "todo.org􀀁" "geração Z falas.org􀀁" "*dashboard*􀀁" "org-agenda.org􀀁" "emacs.org􀀁" "~/.config/emacs/emacs.org􀀂" "*dashboard*􀀁" "emacs.org􀀁" "Emacs.org􀀁"))
(setq counsel-ibuffer-history '(#("     emacs.org              32481 Org              ~/.config/emacs/emacs.org" 0 76 (idx 0 ivy-index 0))))
(setq minibuffer-history '("~/nixfiles/" "nixos" "home-manager" "nix-mode" "mode-line-position" "mode-line-format" "src/main.rs" "~/Projects/languages/rust/guess/" "org-mac.org" "all-the-icons" "all-the-icons-completion" "treemacs--themes" "treemacs--current-theme" "all-the-icons" "solaire-mode" "rust-analyzer" "rust-mode" "b4sqss" "with-editor" "org-roam-bibtex" "dwoiandio" "linguas aprender           " "org-roam" "tsteste" "haskell gloss" "0" "fsac" "org-roam-capture-templates" "nroam" "Calendar: Today" "3" "1" "linguas aprender           " "Emacs.org" "~/Projects/emacs-from-scratch/" "atom-one-dark-theme" "smudge" "ox-reveal" "svg-lib" "svg" "svg-lib" "Calendar: Today" "calendar-norway" "objetivos           " "Goals           " "respectful" "evil-leader" "evilj" "evil-collection" "org-evil" "evil" "go" "respectful" "automatic" "atom-one-dark" "dired-sidebar" "tabbar" "major-mode-icons" "theme-magic" "bug-hunter" "svg" "smart-mode-line" "25" "einstellung           " "as primeiras 20 horas           " "procrastinação           " "crie um mapa até o objetivo           " "as primeiras 20 horas" "aprendizado passivo x ativo           " "praticar por vontade propria           " "Learning to learn principles #Learning #learn #to" "se teste" "Tecnica de feynman           " "conceitos x fatos" "recompensas e riscos" "trabalho profundo" "procrastinação           " "lei de parkinson" "Learning to learn principles #Learning #learn #to" "principio de pareto" "Method of loci #Learning #learn #to" "poder dos sentidos" "procrastinação           " "crie um mapa até o objetivo           " "objetivos           " "sistema x objetivos" "salvar energia com habitos           " "ciencia de feedback           " "importancia da comunidade" "treino cerebral           " "einstellung" "Learning to learn principles #Learning #learn #to" "learning to learn lies #Learning" "Variedade é importante" "crie um mapa até o objetivo" "praticar por vontade propria           " "repetição espacial           " "Parcelas do aprendizado           " "Divida o assunto" "foco x distraido           "))
(setq file-name-history '("~/.emacs.d/" "~/.emacs.d/emacs.org" "~/.config/xmonad/xmobar.hs" "~/.config/rofi/config.rasi" "/etc/nixos/configuration.nix" "~/.config/nixpkgs/home.nix" "~/.zshrc" "~/.config/xmonad/xmonad.hs" "/etc/nixos/configuration.nix" "~/nixfiles/home.nix" "~/.config/nixpkgs/alacritty.nix" "~/Projects/git/dwm/config.h" "~/.config/xmonad/xmobar.hs" "~/.config/xmonad/" "~/.config/xmonad/xmonad.hs" "~/.config/xmonad/xmobar.hs" "~/.config/nixpkgs/init.vim" "/etc/nixos/configuration.nix" "~/.config/xmonad/xmonad.hs" "~/.config/nixpkgs/alacritty.nix" "~/.config/nixpkgs/xmonad.nix" "~/.config/xmonad/xmonad.hs" "~/.config/xmonad/xmobar.hs" "~/.config/nixpkgs/alacritty.nix" "~/Projects/git/dwm/config.h" "/etc/nixos/configuration.nix" "~/.config/nixpkgs/home.nix" "~/.config/rofi/" "~/.config/rofi/config.rasi" "~/.config/xmonad/xmobar.hs" "~/.config/xmonad/xmonad.hs" "~/.config/xmonad/xmobar.hs" "~/.config/nixpkgs/emacs.nix" "~/.config/nixpkgs/xmonad.nix" "~/.config/xmonad/xmonad.hs" "~/.config/nixpkgs/xmonad.nix" "~/.config/nixpkgs/nvim.nix" "~/.config/nixpkgs/emacs.nix" "~/.config/nixpkgs/home.nix" "~/.config/nixpkgs/git.nix" "~/.config/nixpkgs/nvim.nix" "~/.config/nixpkgs/git.nix" "~/.config/nixpkgs/alacritty.nix" "~/.config/nixpkgs/" "~/.config/nixpkgs/xmonad.hs" "~/.config/nixpkgs/home.nix" "~/config.nix" "~/.config/bookmarks" "~/" "~/.config/emacs/" "~/.config/emacs/elfeed.org" "~/Projects/languages/rust/guess/Cargo.toml" "~/Projects/languages/rust/guess/src/main.rs" "~/Projects/languages/rust/guess/" "~/Projects/languages/rust/" "~/Projects/languages/C/game dev/main.c" "~/dotfiles/README.org" "~/Projects/languages/Haskell/natural-numbers/Main.hs" "~/Documents/escola/me-mata.org" "~/dotfiles/" "~/dotfiles/README.org" "~/dotfiles/README.md" "~/.config/sxhkd/" "~/Projects/languages/Scheme/sicp/variaveis.scm" "~/Projects/languages/Scheme/sicp/expressions.scm" "~/Projects/languages/Scheme/" "~/Projects/languages/sh/" "~/Projects/languages/js/fibonacci/" "~/Projects/languages/elisp/" "~/Projects/languages/LaTeX/" "~/Projects/languages/Go/fortune/" "~/Projects/languages/Go/git-contributions/" "~/Projects/languages/Haskell/" "~/Projects/languages/Haskell/swastika.hs" ".config/nvim/lua/plugins.lua" "~/Documents/org/roam/20210831162703-goals.org" "~/Projects/languages/C/fibonacci/fibonacci.c" "~/Documents/org/privacy.org" "~/Documents/escola/me-mata.org" "~/Documents/escola/marcosfisica1.org" "~/Documents/escola/conjunções subordinativas.org" "~/Documents/escola/mariana-x-men.org" "~/Documents/escola/fahrenheit 451.org" "~/Documents/escola/conjunções subordinativas.org" "~/Documents/escola/x-men.org" "~/Documents/escola/conjunções subordinativas.org" "~/Documents/escola/fahrenheit 451.org" "~/Documents/org/org-review-demo.org" "~/Documents/escola/x-men.org" "~/.config/X11/Xresources" "~/.config/emacs/elfeed.org" "~/.config/sxhkd/sxhkdrc" "~/.Xresources" "~/Documents/escola/x-men.org" "~/Documents/escola/conjunções subordinativas.org" "~/Documents/org/org-review-demo.org" "~/.config/emacs/emacs.org" "~/Documents/escola/conjunções subordinativas.org" "~/Documents/org/org-review-demo.org" "~/Documents/escola/conjunções subordinativas.org"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("%s/~\\/.config\\/emacs/.emacs.d/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e slstatus/components/battery.c" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("1" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("%s/212733/4b565c/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e home.nix" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("w" 0 1 (ex-index 1)) #("e emacs.nix" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("w" 0 1 (ex-index 1)) #("e home.nix" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("e home.n" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("e hom" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("w" 0 1 (ex-index 1)) #("e home.nix" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e xmonad.nix" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("w" 0 1 (ex-index 1)) #("e ncmpcpp.nix" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("w" 0 1 (ex-index 1)) #("e home.nix" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("w" 0 1 (ex-index 1)) #("w xmonad.nix" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w README.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq consult--line-history '("usr" "counsel" "
                                          [elfeed] [open the emacs.org] [new scratch buffer] 􀁯
                                                148 packages loaded in 1.266216 seconds􀃎
                             Recent Files: (r)􀄧
                                 ~/Documents/org/org-agenda.org􀅗
                                 ~/Documents/org/roam/journal/2021-08-29.org􀆘
                                 ~/.config/emacs/emacs.org􀇦
                                 ~/Documents/pessoal/fit/rotina.org􀈢
                                 ~/Documents/projects/languages/Haskell/natural-numbers/Main.hs􀉧
                             Bookmarks: (m)􀋉"))
(setq consult--theme-history '("doom-tomorrow-night" "doom-one" "doom-tomorrow-night" "doom-oceanic-next" "doom-tomorrow-night" "doom-monokai-pro" #("doom-gruvbox" 0 12 (face nil)) "doom-monokai-pro" "doom-gruvbox" "doom-Iosvkem" "doom-gruvbox" "doom-acario-dark" "doom-one" "atom-one-dark" "bespoke" "doom-horizon" "dichromacy" "doom-snazzy" "adwaita" "doom-gruvbox" "doom-vibrant" "gruvbox" "atom-one-dark" "cherry-blossom" "doom-material" "material" "immaterial-dark" "spaceduck" "doom-1337" "doom-vibrant" "doom-one" "everforest-dark" "gruvbox" "nano" "atom-one-dark" "doom-one" "material" "leuven" "wombat" "tango" "doom-spacegrey" "alduin" "nord"))
(setq extended-command-history '("consult-theme" "lsp" "eshell" "evil-write" "eshell" "package-install" "bookmark-save" "bookmark-set" "bookmark-save" "bookmark-set" "eshell" "eshell-mode" "eshell-syntax-highlighting-global-mode" "eshell" "eshell-syntax-highlighting-mode" "package-install" "nix-mode" "package-install" "bespoke-modeline-mode" "bespoke-modeline-toggle" "lsp" "projectile-find-file" "projectile-mode" "treemacs-projectile" "projectile-find-file" "projectile-mode" "treemacs-toggle-show-dotfiles" "treemacs" "treemacs-mode" "treemacs" "treemacs-mode" "treemacs-load-theme" "treemacs" "package-install" "treemacs-load-theme" "treemacs" "treemacs-load-theme" "treemacs-mode" "treemacs" "treemacs-load-theme" "treemacs-icon-catalogue" "treemacs" "diredful-mode" "treemacs" "package-install" "consult-theme" "solaire-global-mode" "solaire-mode-reset" "solaire-mode" "package-install" "lsp" "rust-mode" "rust-run" "package-install" "consult-theme" "lsp" "consult-theme" "package-install" "consult-theme" "eshell" "org-display-inline-images" "org-insert-link" "eshell-toggle" "magit-push" "magit-commit-create" "package-reinstall" "magit-commit-create" "magit-commit" "package-install" "magit-remote-add" "magit" "package-install" "org-roam-capture" "org-roam-refile" "package-reinstall" "package-install" "consult-theme" "package-install" "eshell-toggle" "package-install" "lsp-install-server" "consult-theme" "package-install" "org-roam-capture" "org-ql-view" "org-capture" "package-install" "writeroom-mode" "calc" "writeroom-mode" "package-install" "lsp-install-server" "consult-theme" "package-install" "embark-act" "projectile-find-file" "package-install" "calendar" "list-packages" "package-install"))
(setq counsel-M-x-history '(#("consult fi" 0 10 (ivy-index 0)) "consult-find"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq evil-jumps-history '((9 "/home/basqs/nix/link.sh") (1 "/home/basqs/.emacs.d/emacs.org") (14534 "/home/basqs/.emacs.d/emacs.org") (15423 "/home/basqs/.emacs.d/emacs.org") (30271 "/home/basqs/.emacs.d/emacs.org") (15426 "/home/basqs/.emacs.d/emacs.org") (30271 "/home/basqs/.emacs.d/emacs.org") (15426 "/home/basqs/.emacs.d/emacs.org") (8122 "/home/basqs/.emacs.d/emacs.org") (8058 "/home/basqs/.emacs.d/emacs.org") (1953 "/home/basqs/.emacs.d/emacs.org") (1048 "/home/basqs/.emacs.d/emacs.org") (30271 "/home/basqs/.emacs.d/emacs.org") (15426 "/home/basqs/.emacs.d/emacs.org") (15425 "/home/basqs/.emacs.d/emacs.org") (8122 "/home/basqs/.emacs.d/emacs.org") (8121 "/home/basqs/.emacs.d/emacs.org") (8058 "/home/basqs/.emacs.d/emacs.org") (8057 "/home/basqs/.emacs.d/emacs.org") (1953 "/home/basqs/.emacs.d/emacs.org") (1048 "/home/basqs/.emacs.d/emacs.org") (30271 "/home/basqs/.emacs.d/emacs.org") (30270 "/home/basqs/.emacs.d/emacs.org") (1 "/home/basqs/.emacs.d/emacs.org") (2712 "/home/basqs/.config/xmonad/xmobar.hs") (3079 "/etc/nixos/configuration.nix") (12 "/etc/nixos/configuration.nix") (1309 "/etc/nixos/configuration.nix") (1283 "/etc/nixos/configuration.nix") (470 "/etc/nixos/configuration.nix") (666 "/etc/nixos/configuration.nix") (524 "/home/basqs/.config/nixpkgs/home.nix") (525 "/home/basqs/.config/nixpkgs/home.nix") (15628 "/home/basqs/.config/xmonad/xmonad.hs") (15540 "/home/basqs/.config/xmonad/xmonad.hs") (8218 "/home/basqs/.config/xmonad/xmonad.hs") (6881 "/home/basqs/.config/xmonad/xmonad.hs") (6376 "/home/basqs/.config/xmonad/xmonad.hs") (6287 "/home/basqs/.config/xmonad/xmonad.hs") (3040 "/home/basqs/.config/xmonad/xmonad.hs") (3006 "/home/basqs/.config/xmonad/xmonad.hs") (1 "/home/basqs/.config/xmonad/xmonad.hs") (399 "/home/basqs/.config/nixpkgs/home.nix") (276 "/home/basqs/.config/xmonad/xmobar.hs") (195 "/home/basqs/.config/xmonad/xmobar.hs") (8610 "/home/basqs/.config/xmonad/xmonad.hs") (141 "/home/basqs/.config/xmonad/xmobar.hs") (7860 "/home/basqs/.config/xmonad/xmonad.hs") (1 "/home/basqs/.config/nixpkgs/home.nix") (957 "/home/basqs/.config/nixpkgs/home.nix") (1 "/home/basqs/.config/xmonad/xmonad.hs") (831 "/home/basqs/.config/xmonad/xmobar.hs") (3439 "/etc/nixos/configuration.nix") (1 "/etc/nixos/configuration.nix") (1516 "/home/basqs/.config/rofi/config.rasi") (1 "/home/basqs/.config/rofi/config.rasi") (1048 "/home/basqs/.config/rofi/config.rasi") (1 "/home/basqs/.config/rofi/config.rasi") (647 "/home/basqs/.config/xmonad/xmobar.hs") (32 "/home/basqs/.config/xmonad/xmobar.hs") (730 "/home/basqs/.config/xmonad/xmobar.hs") (2045 "/home/basqs/.config/xmonad/xmobar.hs") (1633 "/home/basqs/.config/xmonad/xmobar.hs") (738 "/home/basqs/.config/xmonad/xmobar.hs") (2043 "/home/basqs/.config/xmonad/xmobar.hs") (1 "/home/basqs/.config/xmonad/xmobar.hs") (1 "/home/basqs/.config/xmonad/xmobar.hs") (5015 "/home/basqs/.config/xmonad/xmonad.hs") (695 "/home/basqs/.config/xmonad/xmobar.hs") (799 "/home/basqs/.config/nixpkgs/home.nix") (1063 "/home/basqs/.config/nixpkgs/home.nix") (1038 "/home/basqs/.config/nixpkgs/home.nix") (1463 "/home/basqs/.config/nixpkgs/home.nix") (120 "/home/basqs/.config/nixpkgs/home.nix") (58 "/home/basqs/.config/nixpkgs/home.nix") (707 "/home/basqs/.config/nixpkgs/home.nix") (38 "/home/basqs/Projects/languages/rust/guess/src/main.rs") (210 "/home/basqs/.mozilla/firefox/bb56xd9y.Normal/user.js") (181 "/home/basqs/Projects/languages/rust/guess/Cargo.toml") (503 "/home/basqs/Projects/languages/rust/guess/src/main.rs") (38 "/home/basqs/Projects/languages/C/game dev/main.c") (1 "/home/basqs/Projects/languages/Haskell/natural-numbers/Main.hs") (251 "/home/basqs/Projects/languages/Haskell/natural-numbers/Main.hs") (122 "/home/basqs/Projects/languages/Haskell/natural-numbers/Main.hs") (573 "/home/basqs/Documents/org/roam/20210919112821-conceitos_x_fatos.org")))
